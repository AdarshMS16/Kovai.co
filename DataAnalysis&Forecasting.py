# -*- coding: utf-8 -*-
"""kovai.co.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kMXmun1-mUu2QX5GGkLSdOlzV46o41BG
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv("/content/Daily_Public_Transport_Passenger_Boardings_By_Ticket_Type_20240513.csv")
data

data['Paper Ticket'].plot(kind='hist', bins=20, title='Paper Ticket')
plt.show()

data['MyWay'].plot(kind='hist', bins=20, title='MyWay')
plt.show()

data['Date'] = pd.to_datetime(data['Date'], format='%d-%m-%Y')

filtered_df = data.loc[(data['Date'] >= '01-04-2023') & (data['Date'] <= '30-04-2024')]
filtered_df

filtered_df['Date'].min()

filtered_df['Date'].max()

filtered_df.shape

import seaborn as sns

data2=filtered_df

data2['month'] = data2['Date'].dt.month
data2['year'] = data2['Date'].dt.year

plt.figure(figsize=(7, 5))
sns.lineplot(x=data2.month, y=data['MyWay'],ci=None)
plt.xlabel('Month')
plt.ylabel('MyWay')
plt.title('Seasonal Plot')
plt.xticks(range(1, 13), labels=[
           'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(True)
plt.show()

plt.figure(figsize=(7, 5))
sns.lineplot(x=data2.month, y=data['Paper Ticket'],ci=None)
plt.xlabel('Month')
plt.ylabel('MyWay')
plt.title('Seasonal Plot')
plt.xticks(range(1, 13), labels=[
           'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(True)
plt.show()

plt.figure(figsize = (10,6))
sns.boxplot(x = data2.month, y = data2['MyWay'])
plt.xlabel('month')
plt.show()

plt.figure(figsize = (10,6))
sns.boxplot(x = data2.year, y = data2['MyWay'])
plt.xlabel('year')
plt.show()

plt.figure(figsize=(7, 5))
sns.histplot(data['Paper Ticket'], kde=True)
plt.xlabel('PaperTicket')
plt.ylabel('Frequency')
plt.title('Histogram and Density Plot')
plt.grid(False)
plt.show()

plt.figure(figsize = (10, 6))
sns.boxplot(x =data2.year, y = 'Paper Ticket', data = data2)
plt.show()

plt.figure(figsize = (10,6))
sns.boxplot(x = data2.month, y = data2['Paper Ticket'])
plt.xlabel('month')
plt.show()

data2.plot(x="month", y=["MyWay", "Paper Ticket"], kind="line")
plt.show()

total_myway = data2['MyWay'].sum()
total_paper_tickets = data2['Paper Ticket'].sum()

plt.figure(figsize=(8, 5))
ticket_types = ['MyWay', 'Paper Tickets']
ticket_counts = [total_myway, total_paper_tickets]
plt.bar(ticket_types, ticket_counts, color=['blue', 'green'])

plt.xlabel('Ticket Types')
plt.ylabel('Total Number of Tickets Sold')
plt.title('Total Usage of MyWay vs Paper Tickets')

plt.show()

data2['day_of_week'] = data2['Date'].dt.day_name()
average_sales = data2.groupby('day_of_week')[['MyWay', 'Paper Ticket']].mean()
plt.figure(figsize=(10, 6))
average_sales.plot(kind='bar', color=['blue', 'green'])

# Adding labels and title
plt.xlabel('Day of the Week')
plt.ylabel('Average Number of Tickets Sold')
plt.title('Average Ticket Sales by Day of the Week')

# Display the plot
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

